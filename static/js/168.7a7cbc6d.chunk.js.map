{"version":3,"file":"static/js/168.7a7cbc6d.chunk.js","mappings":"sPACA,EAAmC,kCAAnC,EAAkF,4BAAlF,EAA2H,4BAA3H,EAAgK,wBAAhK,EAAkM,yB,SCkDlM,EA7CgB,SAAHA,GAAqB,IAAfC,EAAOD,EAAPC,QACjBC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAmB1B,OAjBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEKC,EAAAA,EAAAA,IAAgBrB,GAAS,KAAD,EAA3CiB,EAAUC,EAAAI,KAChBhB,EAAWW,GAAYC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEvBM,QAAQC,MAAM,0BAAyBP,EAAAK,IAAS,QAE9B,OAF8BL,EAAAC,KAAA,GAEhDT,GAAW,GAAOQ,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAX,EAAA,wBAErB,kBAToB,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAWjB7B,GACFY,GAEJ,GAAG,CAACZ,KAGF8B,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAwBC,SACrCxB,GACCqB,EAAAA,EAAAA,KAACI,EAAAA,EAAO,IACN7B,EAAQ8B,OAAS,GACnBL,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAkBC,SAC9B5B,EAAQ+B,KAAI,SAAAC,GAAM,OACjBC,EAAAA,EAAAA,MAAA,MAAoBP,UAAWC,EAAkBC,SAAA,EAC/CK,EAAAA,EAAAA,MAAA,KAAGP,UAAWC,EAAcC,SAAA,CAAC,WAASI,EAAOE,WAC7CT,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAeC,SAAEI,EAAOG,YAF/BH,EAAOI,GAGX,OAITX,EAAAA,EAAAA,KAAA,KAAAG,SAAG,0CAIX,C","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsContainer\":\"Reviews_reviewsContainer__bHfUv\",\"reviewList\":\"Reviews_reviewList__uMBar\",\"reviewItem\":\"Reviews_reviewItem__ax7Fo\",\"author\":\"Reviews_author__CqYAZ\",\"content\":\"Reviews_content__13k0w\"};","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getMovieReviews } from '../../service/api';\nimport Loading from 'common/Loading/Loading';\nimport styles from './Reviews.module.css';\n\nconst Reviews = ({ movieId }) => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchReviewData = async () => {\n      try {\n        const reviewData = await getMovieReviews(movieId);\n        setReviews(reviewData);\n      } catch (error) {\n        console.error('Error fetching reviews:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (movieId) {\n      fetchReviewData();\n    }\n  }, [movieId]);\n\n  return (\n    <div className={styles.reviewsContainer}>\n      {loading ? (\n        <Loading />\n      ) : reviews.length > 0 ? (\n        <ul className={styles.reviewList}>\n          {reviews.map(review => (\n            <li key={review.id} className={styles.reviewItem}>\n              <p className={styles.author}>Author: {review.author}</p>\n              <p className={styles.content}>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No reviews available for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\n\nexport default Reviews;\n"],"names":["_ref","movieId","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","loading","setLoading","useEffect","fetchReviewData","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","reviewData","_context","prev","next","getMovieReviews","sent","t0","console","error","finish","stop","apply","arguments","_jsx","className","styles","children","Loading","length","map","review","_jsxs","author","content","id"],"sourceRoot":""}