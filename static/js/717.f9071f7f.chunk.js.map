{"version":3,"file":"static/js/717.f9071f7f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","webpack://react-homework-template/./src/common/Button/Button.module.css?e55f","common/Button/Button.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"Cast_castContainer__NIXqj\",\"gridContainer\":\"Cast_gridContainer__DbLQt\",\"gridItem\":\"Cast_gridItem__ewyLS\",\"actorImage\":\"Cast_actorImage__IECZO\",\"actorDetails\":\"Cast_actorDetails__aQLM3\"};","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getMovieCredits } from '../../service/api';\nimport Loading from 'common/Loading/Loading';\nimport styles from './Cast.module.css';\n\nconst Cast = ({ movieId }) => {\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCastData = async () => {\n      const castData = await getMovieCredits(movieId);\n      setCast(castData);\n    };\n\n    if (movieId) {\n      fetchCastData();\n    }\n  }, [movieId]);\n\n  const getDefaultImage = () => {\n    return 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  };\n\n  if (!cast.length) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={styles.castContainer}>\n      <div className={styles.gridContainer}>\n        {cast.map(actor => (\n          <div key={actor.id} className={styles.gridItem}>\n            <img\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/w200${actor.profile_path}`\n                  : getDefaultImage()\n              }\n              alt={actor.name}\n              className={styles.actorImage}\n            />\n            <div className={styles.actorDetails}>\n              <strong>{actor.name}</strong> Character: {actor.character}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewsContainer\":\"Reviews_reviewsContainer__bHfUv\",\"reviewList\":\"Reviews_reviewList__uMBar\",\"reviewItem\":\"Reviews_reviewItem__ax7Fo\",\"author\":\"Reviews_author__CqYAZ\",\"content\":\"Reviews_content__13k0w\"};","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getMovieReviews } from '../../service/api';\nimport Loading from 'common/Loading/Loading';\nimport styles from './Reviews.module.css';\n\nconst Reviews = ({ movieId }) => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchReviewData = async () => {\n      try {\n        const reviewData = await getMovieReviews(movieId);\n        setReviews(reviewData);\n      } catch (error) {\n        console.error('Error fetching reviews:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (movieId) {\n      fetchReviewData();\n    }\n  }, [movieId]);\n\n  return (\n    <div className={styles.reviewsContainer}>\n      {loading ? (\n        <Loading />\n      ) : reviews.length > 0 ? (\n        <ul className={styles.reviewList}>\n          {reviews.map(review => (\n            <li key={review.id} className={styles.reviewItem}>\n              <p className={styles.author}>Author: {review.author}</p>\n              <p className={styles.content}>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No reviews available for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\n\nexport default Reviews;\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__KwPBf\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './Button.module.css';\n\nconst Button = ({ className }) => {\n  const navigate = useNavigate();\n\n  const handleGoBack = () => {\n    navigate(-1);\n  };\n  return (\n    <button className={`${styles.button} ${className}`} onClick={handleGoBack}>\n      <span className={styles.icon}>&#x2190;</span> Go Back\n    </button>\n  );\n};\n\nButton.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__Ys+c9\",\"container_details\":\"MovieDetails_container_details__sdn-J\",\"data\":\"MovieDetails_data__JrTt7\",\"poster\":\"MovieDetails_poster__yO7gD\",\"title\":\"MovieDetails_title__cUGs9\",\"releaseDate\":\"MovieDetails_releaseDate__kqeBV\",\"userScore\":\"MovieDetails_userScore__mU7Se\",\"overview\":\"MovieDetails_overview__U5Vnb\",\"genres\":\"MovieDetails_genres__Pnmgt\",\"additional\":\"MovieDetails_additional__+f3rh\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { searchMovieById } from 'service/api';\nimport Cast from '../../components/Cast/Cast';\nimport Reviews from '../../components/Reviews/Reviews';\nimport Button from '../../common/Button/Button';\nimport Loading from 'common/Loading/Loading';\nimport styles from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const numericMovieId = parseInt(movieId, 10);\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [showCast, setShowCast] = useState(false);\n  const [showReview, setShowReview] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const movieDetailsData = await searchMovieById(movieId);\n        setMovieDetails(movieDetailsData);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <Loading />;\n  }\n\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = movieDetails;\n\n  const userScore = Math.round(vote_average * 10);\n\n  const getDefaultImage = () => {\n    return 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  };\n\n  const handleClick = () => {\n    console.log('Button clicked!');\n  };\n\n  return (\n    <div className={styles.container}>\n      <Button onClick={handleClick} className=\"custom-style\">\n        Go Back\n      </Button>\n      <div className={styles.container_details}>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : getDefaultImage()\n          }\n          alt={original_title}\n          className={styles.poster}\n        />\n        <div className={styles.container.data}>\n          <h2 className={styles.title}>{original_title}</h2>\n          <p className={styles.releaseDate}>\n            <strong>Release Date:</strong>{' '}\n            {release_date ? new Date(release_date).toLocaleDateString() : 'N/A'}\n          </p>\n          <p className={styles.userScore}>\n            <strong>User score:</strong> {userScore || 'N/A'} %\n          </p>\n          <p className={styles.overview}>\n            <strong>Overview:</strong> {overview || 'N/A'}\n          </p>\n          <p className={styles.genres}>\n            <strong>Genres:</strong>{' '}\n            {genres ? genres.map(genre => genre.name).join(', ') : 'N/A'}\n          </p>\n        </div>\n      </div>\n      <div className={styles.additional}>\n        <p>Additional information</p>\n        <h3 onClick={() => setShowCast(!showCast)}>Cast</h3>\n        {showCast && <Cast movieId={numericMovieId} />}\n        <h3 onClick={() => setShowReview(!showReview)}>Reviews</h3>\n        {showReview && <Reviews movieId={numericMovieId} />}\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["_ref","movieId","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchCastData","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","castData","_context","prev","next","getMovieCredits","sent","stop","apply","arguments","length","_jsx","className","styles","children","map","actor","_jsxs","src","profile_path","concat","alt","name","character","id","Loading","reviews","setReviews","_useState3","_useState4","loading","setLoading","fetchReviewData","reviewData","getMovieReviews","t0","console","error","finish","review","author","content","navigate","useNavigate","onClick","useParams","numericMovieId","parseInt","movieDetails","setMovieDetails","showCast","setShowCast","_useState5","_useState6","showReview","setShowReview","fetchData","movieDetailsData","searchMovieById","poster_path","original_title","release_date","vote_average","overview","genres","userScore","Math","round","Button","log","Date","toLocaleDateString","genre","join","Cast","Reviews"],"sourceRoot":""}