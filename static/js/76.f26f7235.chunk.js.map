{"version":3,"file":"static/js/76.f26f7235.chunk.js","mappings":"oPACA,EAAgC,4BAAhC,EAA4E,4BAA5E,EAAmH,uBAAnH,EAAuJ,yBAAvJ,EAA+L,2B,SCuD/L,EAlDa,SAAHA,GAAqB,IAAfC,EAAOD,EAAPC,QACdC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,IAEpBI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACGC,EAAAA,EAAAA,IAAgBjB,GAAS,KAAD,EAAzCa,EAAQC,EAAAI,KACdZ,EAAQO,GAAU,wBAAAC,EAAAK,OAAA,GAAAP,EAAA,KACnB,kBAHkB,OAAAH,EAAAW,MAAA,KAAAC,UAAA,KAKfrB,GACFQ,GAEJ,GAAG,CAACR,IAMJ,OAAKK,EAAKiB,QAKRC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAqBC,UACnCH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAqBC,SAClCrB,EAAKsB,KAAI,SAAAC,GAAK,OACbC,EAAAA,EAAAA,MAAA,OAAoBL,UAAWC,EAAgBC,SAAA,EAC7CH,EAAAA,EAAAA,KAAA,OACEO,IACEF,EAAMG,aAAY,kCAAAC,OACoBJ,EAAMG,cAfjD,8EAkBGE,IAAKL,EAAMM,KACXV,UAAWC,KAEbI,EAAAA,EAAAA,MAAA,OAAKL,UAAWC,EAAoBC,SAAA,EAClCH,EAAAA,EAAAA,KAAA,UAAAG,SAASE,EAAMM,OAAc,eAAaN,EAAMO,eAX1CP,EAAMQ,GAaV,SApBLb,EAAAA,EAAAA,KAACc,EAAAA,EAAO,GAyBnB,C","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"Cast_castContainer__NIXqj\",\"gridContainer\":\"Cast_gridContainer__DbLQt\",\"gridItem\":\"Cast_gridItem__ewyLS\",\"actorImage\":\"Cast_actorImage__IECZO\",\"actorDetails\":\"Cast_actorDetails__aQLM3\"};","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getMovieCredits } from '../../service/api';\nimport Loading from 'common/Loading/Loading';\nimport styles from './Cast.module.css';\n\nconst Cast = ({ movieId }) => {\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCastData = async () => {\n      const castData = await getMovieCredits(movieId);\n      setCast(castData);\n    };\n\n    if (movieId) {\n      fetchCastData();\n    }\n  }, [movieId]);\n\n  const getDefaultImage = () => {\n    return 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  };\n\n  if (!cast.length) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={styles.castContainer}>\n      <div className={styles.gridContainer}>\n        {cast.map(actor => (\n          <div key={actor.id} className={styles.gridItem}>\n            <img\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/w200${actor.profile_path}`\n                  : getDefaultImage()\n              }\n              alt={actor.name}\n              className={styles.actorImage}\n            />\n            <div className={styles.actorDetails}>\n              <strong>{actor.name}</strong> Character: {actor.character}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\n\nexport default Cast;\n"],"names":["_ref","movieId","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchCastData","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","castData","_context","prev","next","getMovieCredits","sent","stop","apply","arguments","length","_jsx","className","styles","children","map","actor","_jsxs","src","profile_path","concat","alt","name","character","id","Loading"],"sourceRoot":""}